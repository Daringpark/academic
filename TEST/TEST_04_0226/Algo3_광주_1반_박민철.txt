3-1. 반복된 문자열을 제거하는데, 그 반복된 문자열을 제거하고 연결된 부분에 또 다시 반복된 문자열이 나열 될 경우,
제거하는데 적합한 알고리즘; 자료구조는 'Stack'이다.

FILO (First In, Last Out)의 선입후출의 데이터 처리방식을 통해서 문자열 데이터를 받는 과정에서
나중에 들어온 중복된 문자열을 제거하고 또 데이터를 받는 과정을 할 수 있게 된다.

3-2 'ABCCB'와 같은 string 문자열 데이터가 들어왔을 경우,
4) STACK = ['A','B','C','C'] 
# 4)의 경우, 중복된 문자열로 인해 조건을 만족하게 된다.
4-1) STACK = ['A','B',C'] # STACK.pop() # 나중에 들어온 중복된 문자열을 제거해준다.
4-2) STACK = ['A','B'] # STACK.pop()
5) STACK = ['A','B','B']
# 5)의 경우, 조건문을 만족하게 된다.
5-1) STACK = ['A','B'] # STACK.pop() # 나중에 들어온 중복된 문자열을 제거해준다.
5-2) STACK = ['A'] # STACK.pop()
고로, 최종 결과는 다음과 같다. STACK = ['A']